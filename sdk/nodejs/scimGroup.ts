// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ScimGroup extends pulumi.CustomResource {
    /**
     * Get an existing ScimGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScimGroupState, opts?: pulumi.CustomResourceOptions): ScimGroup {
        return new ScimGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/scimGroup:ScimGroup';

    /**
     * Returns true if the given object is an instance of ScimGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScimGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScimGroup.__pulumiType;
    }

    public readonly displayName!: pulumi.Output<string>;
    public readonly entitlements!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly inheritedRoles!: pulumi.Output<string[]>;
    public readonly members!: pulumi.Output<string[] | undefined>;
    public readonly roles!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ScimGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScimGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScimGroupArgs | ScimGroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ScimGroupState | undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["entitlements"] = state ? state.entitlements : undefined;
            inputs["inheritedRoles"] = state ? state.inheritedRoles : undefined;
            inputs["members"] = state ? state.members : undefined;
            inputs["roles"] = state ? state.roles : undefined;
        } else {
            const args = argsOrState as ScimGroupArgs | undefined;
            if (!args || args.displayName === undefined) {
                throw new Error("Missing required property 'displayName'");
            }
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["entitlements"] = args ? args.entitlements : undefined;
            inputs["members"] = args ? args.members : undefined;
            inputs["roles"] = args ? args.roles : undefined;
            inputs["inheritedRoles"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ScimGroup.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScimGroup resources.
 */
export interface ScimGroupState {
    readonly displayName?: pulumi.Input<string>;
    readonly entitlements?: pulumi.Input<pulumi.Input<string>[]>;
    readonly inheritedRoles?: pulumi.Input<pulumi.Input<string>[]>;
    readonly members?: pulumi.Input<pulumi.Input<string>[]>;
    readonly roles?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ScimGroup resource.
 */
export interface ScimGroupArgs {
    readonly displayName: pulumi.Input<string>;
    readonly entitlements?: pulumi.Input<pulumi.Input<string>[]>;
    readonly members?: pulumi.Input<pulumi.Input<string>[]>;
    readonly roles?: pulumi.Input<pulumi.Input<string>[]>;
}
