// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class Job extends pulumi.CustomResource {
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JobState, opts?: pulumi.CustomResourceOptions): Job {
        return new Job(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/job:Job';

    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Job {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Job.__pulumiType;
    }

    public /*out*/ readonly createdTime!: pulumi.Output<number>;
    public /*out*/ readonly creatorUserName!: pulumi.Output<string>;
    public readonly emailNotifications!: pulumi.Output<outputs.JobEmailNotifications | undefined>;
    public readonly existingClusterId!: pulumi.Output<string | undefined>;
    public readonly jarMainClassName!: pulumi.Output<string | undefined>;
    public readonly jarParameters!: pulumi.Output<string[] | undefined>;
    public readonly jarUri!: pulumi.Output<string | undefined>;
    public /*out*/ readonly jobId!: pulumi.Output<number>;
    public readonly libraryCrans!: pulumi.Output<outputs.JobLibraryCran[] | undefined>;
    public readonly libraryEggs!: pulumi.Output<string[] | undefined>;
    public readonly libraryJars!: pulumi.Output<string[] | undefined>;
    public readonly libraryMavens!: pulumi.Output<outputs.JobLibraryMaven[] | undefined>;
    public readonly libraryPypis!: pulumi.Output<outputs.JobLibraryPypi[] | undefined>;
    public readonly libraryWhls!: pulumi.Output<string[] | undefined>;
    public readonly maxConcurrentRuns!: pulumi.Output<number | undefined>;
    public readonly maxRetries!: pulumi.Output<number | undefined>;
    public readonly minRetryIntervalMillis!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly newCluster!: pulumi.Output<outputs.JobNewCluster | undefined>;
    public readonly notebookBaseParameters!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly notebookPath!: pulumi.Output<string | undefined>;
    public readonly pythonFile!: pulumi.Output<string | undefined>;
    public readonly pythonParameters!: pulumi.Output<string[] | undefined>;
    public readonly retryOnTimeout!: pulumi.Output<boolean | undefined>;
    public readonly schedule!: pulumi.Output<outputs.JobSchedule | undefined>;
    public readonly sparkSubmitParameters!: pulumi.Output<string[] | undefined>;
    public readonly timeoutSeconds!: pulumi.Output<number | undefined>;

    /**
     * Create a Job resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: JobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JobArgs | JobState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as JobState | undefined;
            inputs["createdTime"] = state ? state.createdTime : undefined;
            inputs["creatorUserName"] = state ? state.creatorUserName : undefined;
            inputs["emailNotifications"] = state ? state.emailNotifications : undefined;
            inputs["existingClusterId"] = state ? state.existingClusterId : undefined;
            inputs["jarMainClassName"] = state ? state.jarMainClassName : undefined;
            inputs["jarParameters"] = state ? state.jarParameters : undefined;
            inputs["jarUri"] = state ? state.jarUri : undefined;
            inputs["jobId"] = state ? state.jobId : undefined;
            inputs["libraryCrans"] = state ? state.libraryCrans : undefined;
            inputs["libraryEggs"] = state ? state.libraryEggs : undefined;
            inputs["libraryJars"] = state ? state.libraryJars : undefined;
            inputs["libraryMavens"] = state ? state.libraryMavens : undefined;
            inputs["libraryPypis"] = state ? state.libraryPypis : undefined;
            inputs["libraryWhls"] = state ? state.libraryWhls : undefined;
            inputs["maxConcurrentRuns"] = state ? state.maxConcurrentRuns : undefined;
            inputs["maxRetries"] = state ? state.maxRetries : undefined;
            inputs["minRetryIntervalMillis"] = state ? state.minRetryIntervalMillis : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["newCluster"] = state ? state.newCluster : undefined;
            inputs["notebookBaseParameters"] = state ? state.notebookBaseParameters : undefined;
            inputs["notebookPath"] = state ? state.notebookPath : undefined;
            inputs["pythonFile"] = state ? state.pythonFile : undefined;
            inputs["pythonParameters"] = state ? state.pythonParameters : undefined;
            inputs["retryOnTimeout"] = state ? state.retryOnTimeout : undefined;
            inputs["schedule"] = state ? state.schedule : undefined;
            inputs["sparkSubmitParameters"] = state ? state.sparkSubmitParameters : undefined;
            inputs["timeoutSeconds"] = state ? state.timeoutSeconds : undefined;
        } else {
            const args = argsOrState as JobArgs | undefined;
            inputs["emailNotifications"] = args ? args.emailNotifications : undefined;
            inputs["existingClusterId"] = args ? args.existingClusterId : undefined;
            inputs["jarMainClassName"] = args ? args.jarMainClassName : undefined;
            inputs["jarParameters"] = args ? args.jarParameters : undefined;
            inputs["jarUri"] = args ? args.jarUri : undefined;
            inputs["libraryCrans"] = args ? args.libraryCrans : undefined;
            inputs["libraryEggs"] = args ? args.libraryEggs : undefined;
            inputs["libraryJars"] = args ? args.libraryJars : undefined;
            inputs["libraryMavens"] = args ? args.libraryMavens : undefined;
            inputs["libraryPypis"] = args ? args.libraryPypis : undefined;
            inputs["libraryWhls"] = args ? args.libraryWhls : undefined;
            inputs["maxConcurrentRuns"] = args ? args.maxConcurrentRuns : undefined;
            inputs["maxRetries"] = args ? args.maxRetries : undefined;
            inputs["minRetryIntervalMillis"] = args ? args.minRetryIntervalMillis : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["newCluster"] = args ? args.newCluster : undefined;
            inputs["notebookBaseParameters"] = args ? args.notebookBaseParameters : undefined;
            inputs["notebookPath"] = args ? args.notebookPath : undefined;
            inputs["pythonFile"] = args ? args.pythonFile : undefined;
            inputs["pythonParameters"] = args ? args.pythonParameters : undefined;
            inputs["retryOnTimeout"] = args ? args.retryOnTimeout : undefined;
            inputs["schedule"] = args ? args.schedule : undefined;
            inputs["sparkSubmitParameters"] = args ? args.sparkSubmitParameters : undefined;
            inputs["timeoutSeconds"] = args ? args.timeoutSeconds : undefined;
            inputs["createdTime"] = undefined /*out*/;
            inputs["creatorUserName"] = undefined /*out*/;
            inputs["jobId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Job.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Job resources.
 */
export interface JobState {
    readonly createdTime?: pulumi.Input<number>;
    readonly creatorUserName?: pulumi.Input<string>;
    readonly emailNotifications?: pulumi.Input<inputs.JobEmailNotifications>;
    readonly existingClusterId?: pulumi.Input<string>;
    readonly jarMainClassName?: pulumi.Input<string>;
    readonly jarParameters?: pulumi.Input<pulumi.Input<string>[]>;
    readonly jarUri?: pulumi.Input<string>;
    readonly jobId?: pulumi.Input<number>;
    readonly libraryCrans?: pulumi.Input<pulumi.Input<inputs.JobLibraryCran>[]>;
    readonly libraryEggs?: pulumi.Input<pulumi.Input<string>[]>;
    readonly libraryJars?: pulumi.Input<pulumi.Input<string>[]>;
    readonly libraryMavens?: pulumi.Input<pulumi.Input<inputs.JobLibraryMaven>[]>;
    readonly libraryPypis?: pulumi.Input<pulumi.Input<inputs.JobLibraryPypi>[]>;
    readonly libraryWhls?: pulumi.Input<pulumi.Input<string>[]>;
    readonly maxConcurrentRuns?: pulumi.Input<number>;
    readonly maxRetries?: pulumi.Input<number>;
    readonly minRetryIntervalMillis?: pulumi.Input<number>;
    readonly name?: pulumi.Input<string>;
    readonly newCluster?: pulumi.Input<inputs.JobNewCluster>;
    readonly notebookBaseParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly notebookPath?: pulumi.Input<string>;
    readonly pythonFile?: pulumi.Input<string>;
    readonly pythonParameters?: pulumi.Input<pulumi.Input<string>[]>;
    readonly retryOnTimeout?: pulumi.Input<boolean>;
    readonly schedule?: pulumi.Input<inputs.JobSchedule>;
    readonly sparkSubmitParameters?: pulumi.Input<pulumi.Input<string>[]>;
    readonly timeoutSeconds?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Job resource.
 */
export interface JobArgs {
    readonly emailNotifications?: pulumi.Input<inputs.JobEmailNotifications>;
    readonly existingClusterId?: pulumi.Input<string>;
    readonly jarMainClassName?: pulumi.Input<string>;
    readonly jarParameters?: pulumi.Input<pulumi.Input<string>[]>;
    readonly jarUri?: pulumi.Input<string>;
    readonly libraryCrans?: pulumi.Input<pulumi.Input<inputs.JobLibraryCran>[]>;
    readonly libraryEggs?: pulumi.Input<pulumi.Input<string>[]>;
    readonly libraryJars?: pulumi.Input<pulumi.Input<string>[]>;
    readonly libraryMavens?: pulumi.Input<pulumi.Input<inputs.JobLibraryMaven>[]>;
    readonly libraryPypis?: pulumi.Input<pulumi.Input<inputs.JobLibraryPypi>[]>;
    readonly libraryWhls?: pulumi.Input<pulumi.Input<string>[]>;
    readonly maxConcurrentRuns?: pulumi.Input<number>;
    readonly maxRetries?: pulumi.Input<number>;
    readonly minRetryIntervalMillis?: pulumi.Input<number>;
    readonly name?: pulumi.Input<string>;
    readonly newCluster?: pulumi.Input<inputs.JobNewCluster>;
    readonly notebookBaseParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly notebookPath?: pulumi.Input<string>;
    readonly pythonFile?: pulumi.Input<string>;
    readonly pythonParameters?: pulumi.Input<pulumi.Input<string>[]>;
    readonly retryOnTimeout?: pulumi.Input<boolean>;
    readonly schedule?: pulumi.Input<inputs.JobSchedule>;
    readonly sparkSubmitParameters?: pulumi.Input<pulumi.Input<string>[]>;
    readonly timeoutSeconds?: pulumi.Input<number>;
}
