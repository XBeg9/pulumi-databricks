// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class MwsWorkspaces extends pulumi.CustomResource {
    /**
     * Get an existing MwsWorkspaces resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MwsWorkspacesState, opts?: pulumi.CustomResourceOptions): MwsWorkspaces {
        return new MwsWorkspaces(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:aws/mwsWorkspaces:MwsWorkspaces';

    /**
     * Returns true if the given object is an instance of MwsWorkspaces.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MwsWorkspaces {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MwsWorkspaces.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    public readonly awsRegion!: pulumi.Output<string>;
    public /*out*/ readonly creationTime!: pulumi.Output<number>;
    public readonly credentialsId!: pulumi.Output<string>;
    public readonly customerManagedKeyId!: pulumi.Output<string | undefined>;
    public readonly deploymentName!: pulumi.Output<string>;
    public readonly isNoPublicIpEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly networkErrorMessages!: pulumi.Output<outputs.aws.MwsWorkspacesNetworkErrorMessage[]>;
    public readonly networkId!: pulumi.Output<string | undefined>;
    public readonly storageConfigurationId!: pulumi.Output<string>;
    public readonly verifyWorkspaceRunnning!: pulumi.Output<boolean>;
    public /*out*/ readonly workspaceId!: pulumi.Output<number>;
    public readonly workspaceName!: pulumi.Output<string>;
    public /*out*/ readonly workspaceStatus!: pulumi.Output<string>;
    public /*out*/ readonly workspaceStatusMessage!: pulumi.Output<string>;
    public /*out*/ readonly workspaceUrl!: pulumi.Output<string>;

    /**
     * Create a MwsWorkspaces resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MwsWorkspacesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MwsWorkspacesArgs | MwsWorkspacesState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as MwsWorkspacesState | undefined;
            inputs["accountId"] = state ? state.accountId : undefined;
            inputs["awsRegion"] = state ? state.awsRegion : undefined;
            inputs["creationTime"] = state ? state.creationTime : undefined;
            inputs["credentialsId"] = state ? state.credentialsId : undefined;
            inputs["customerManagedKeyId"] = state ? state.customerManagedKeyId : undefined;
            inputs["deploymentName"] = state ? state.deploymentName : undefined;
            inputs["isNoPublicIpEnabled"] = state ? state.isNoPublicIpEnabled : undefined;
            inputs["networkErrorMessages"] = state ? state.networkErrorMessages : undefined;
            inputs["networkId"] = state ? state.networkId : undefined;
            inputs["storageConfigurationId"] = state ? state.storageConfigurationId : undefined;
            inputs["verifyWorkspaceRunnning"] = state ? state.verifyWorkspaceRunnning : undefined;
            inputs["workspaceId"] = state ? state.workspaceId : undefined;
            inputs["workspaceName"] = state ? state.workspaceName : undefined;
            inputs["workspaceStatus"] = state ? state.workspaceStatus : undefined;
            inputs["workspaceStatusMessage"] = state ? state.workspaceStatusMessage : undefined;
            inputs["workspaceUrl"] = state ? state.workspaceUrl : undefined;
        } else {
            const args = argsOrState as MwsWorkspacesArgs | undefined;
            if (!args || args.accountId === undefined) {
                throw new Error("Missing required property 'accountId'");
            }
            if (!args || args.awsRegion === undefined) {
                throw new Error("Missing required property 'awsRegion'");
            }
            if (!args || args.credentialsId === undefined) {
                throw new Error("Missing required property 'credentialsId'");
            }
            if (!args || args.deploymentName === undefined) {
                throw new Error("Missing required property 'deploymentName'");
            }
            if (!args || args.storageConfigurationId === undefined) {
                throw new Error("Missing required property 'storageConfigurationId'");
            }
            if (!args || args.verifyWorkspaceRunnning === undefined) {
                throw new Error("Missing required property 'verifyWorkspaceRunnning'");
            }
            if (!args || args.workspaceName === undefined) {
                throw new Error("Missing required property 'workspaceName'");
            }
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["awsRegion"] = args ? args.awsRegion : undefined;
            inputs["credentialsId"] = args ? args.credentialsId : undefined;
            inputs["customerManagedKeyId"] = args ? args.customerManagedKeyId : undefined;
            inputs["deploymentName"] = args ? args.deploymentName : undefined;
            inputs["isNoPublicIpEnabled"] = args ? args.isNoPublicIpEnabled : undefined;
            inputs["networkId"] = args ? args.networkId : undefined;
            inputs["storageConfigurationId"] = args ? args.storageConfigurationId : undefined;
            inputs["verifyWorkspaceRunnning"] = args ? args.verifyWorkspaceRunnning : undefined;
            inputs["workspaceName"] = args ? args.workspaceName : undefined;
            inputs["creationTime"] = undefined /*out*/;
            inputs["networkErrorMessages"] = undefined /*out*/;
            inputs["workspaceId"] = undefined /*out*/;
            inputs["workspaceStatus"] = undefined /*out*/;
            inputs["workspaceStatusMessage"] = undefined /*out*/;
            inputs["workspaceUrl"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(MwsWorkspaces.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MwsWorkspaces resources.
 */
export interface MwsWorkspacesState {
    readonly accountId?: pulumi.Input<string>;
    readonly awsRegion?: pulumi.Input<string>;
    readonly creationTime?: pulumi.Input<number>;
    readonly credentialsId?: pulumi.Input<string>;
    readonly customerManagedKeyId?: pulumi.Input<string>;
    readonly deploymentName?: pulumi.Input<string>;
    readonly isNoPublicIpEnabled?: pulumi.Input<boolean>;
    readonly networkErrorMessages?: pulumi.Input<pulumi.Input<inputs.aws.MwsWorkspacesNetworkErrorMessage>[]>;
    readonly networkId?: pulumi.Input<string>;
    readonly storageConfigurationId?: pulumi.Input<string>;
    readonly verifyWorkspaceRunnning?: pulumi.Input<boolean>;
    readonly workspaceId?: pulumi.Input<number>;
    readonly workspaceName?: pulumi.Input<string>;
    readonly workspaceStatus?: pulumi.Input<string>;
    readonly workspaceStatusMessage?: pulumi.Input<string>;
    readonly workspaceUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MwsWorkspaces resource.
 */
export interface MwsWorkspacesArgs {
    readonly accountId: pulumi.Input<string>;
    readonly awsRegion: pulumi.Input<string>;
    readonly credentialsId: pulumi.Input<string>;
    readonly customerManagedKeyId?: pulumi.Input<string>;
    readonly deploymentName: pulumi.Input<string>;
    readonly isNoPublicIpEnabled?: pulumi.Input<boolean>;
    readonly networkId?: pulumi.Input<string>;
    readonly storageConfigurationId: pulumi.Input<string>;
    readonly verifyWorkspaceRunnning: pulumi.Input<boolean>;
    readonly workspaceName: pulumi.Input<string>;
}
