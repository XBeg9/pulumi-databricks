// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ScimUser extends pulumi.CustomResource {
    /**
     * Get an existing ScimUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScimUserState, opts?: pulumi.CustomResourceOptions): ScimUser {
        return new ScimUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/scimUser:ScimUser';

    /**
     * Returns true if the given object is an instance of ScimUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScimUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScimUser.__pulumiType;
    }

    public readonly defaultRoles!: pulumi.Output<string[]>;
    public readonly displayName!: pulumi.Output<string | undefined>;
    public readonly entitlements!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly inheritedRoles!: pulumi.Output<string[]>;
    public readonly roles!: pulumi.Output<string[] | undefined>;
    public readonly setAdmin!: pulumi.Output<boolean | undefined>;
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a ScimUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScimUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScimUserArgs | ScimUserState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ScimUserState | undefined;
            inputs["defaultRoles"] = state ? state.defaultRoles : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["entitlements"] = state ? state.entitlements : undefined;
            inputs["inheritedRoles"] = state ? state.inheritedRoles : undefined;
            inputs["roles"] = state ? state.roles : undefined;
            inputs["setAdmin"] = state ? state.setAdmin : undefined;
            inputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as ScimUserArgs | undefined;
            if (!args || args.defaultRoles === undefined) {
                throw new Error("Missing required property 'defaultRoles'");
            }
            if (!args || args.userName === undefined) {
                throw new Error("Missing required property 'userName'");
            }
            inputs["defaultRoles"] = args ? args.defaultRoles : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["entitlements"] = args ? args.entitlements : undefined;
            inputs["roles"] = args ? args.roles : undefined;
            inputs["setAdmin"] = args ? args.setAdmin : undefined;
            inputs["userName"] = args ? args.userName : undefined;
            inputs["inheritedRoles"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ScimUser.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScimUser resources.
 */
export interface ScimUserState {
    readonly defaultRoles?: pulumi.Input<pulumi.Input<string>[]>;
    readonly displayName?: pulumi.Input<string>;
    readonly entitlements?: pulumi.Input<pulumi.Input<string>[]>;
    readonly inheritedRoles?: pulumi.Input<pulumi.Input<string>[]>;
    readonly roles?: pulumi.Input<pulumi.Input<string>[]>;
    readonly setAdmin?: pulumi.Input<boolean>;
    readonly userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ScimUser resource.
 */
export interface ScimUserArgs {
    readonly defaultRoles: pulumi.Input<pulumi.Input<string>[]>;
    readonly displayName?: pulumi.Input<string>;
    readonly entitlements?: pulumi.Input<pulumi.Input<string>[]>;
    readonly roles?: pulumi.Input<pulumi.Input<string>[]>;
    readonly setAdmin?: pulumi.Input<boolean>;
    readonly userName: pulumi.Input<string>;
}
