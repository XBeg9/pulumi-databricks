// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";

export interface ClusterAutoscale {
    maxWorkers?: number;
    minWorkers?: number;
}

export interface ClusterAwsAttributes {
    availability?: string;
    ebsVolumeCount?: number;
    ebsVolumeSize?: number;
    ebsVolumeType?: string;
    firstOnDemand?: number;
    instanceProfileArn?: string;
    spotBidPricePercent?: number;
    zoneId: string;
}

export interface ClusterClusterLogConf {
    dbfs?: outputs.ClusterClusterLogConfDbfs;
    s3?: outputs.ClusterClusterLogConfS3;
}

export interface ClusterClusterLogConfDbfs {
    destination: string;
}

export interface ClusterClusterLogConfS3 {
    cannedAcl?: string;
    destination: string;
    enableEncryption?: boolean;
    encryptionType?: string;
    endpoint?: string;
    kmsKey?: string;
    region?: string;
}

export interface ClusterDockerImage {
    basicAuth?: outputs.ClusterDockerImageBasicAuth;
    url: string;
}

export interface ClusterDockerImageBasicAuth {
    password: string;
    username: string;
}

export interface ClusterInitScript {
    dbfs?: outputs.ClusterInitScriptDbfs;
    s3?: outputs.ClusterInitScriptS3;
}

export interface ClusterInitScriptDbfs {
    destination: string;
}

export interface ClusterInitScriptS3 {
    cannedAcl?: string;
    destination: string;
    enableEncryption?: boolean;
    encryptionType?: string;
    endpoint?: string;
    kmsKey?: string;
    region?: string;
}

export interface ClusterLibraryCran {
    messages: string;
    package?: string;
    repo?: string;
    status: string;
}

export interface ClusterLibraryEgg {
    messages: string[];
    path?: string;
    status: string;
}

export interface ClusterLibraryJar {
    messages: string[];
    path?: string;
    status: string;
}

export interface ClusterLibraryMaven {
    coordinates?: string;
    exclusions?: string[];
    messages: string[];
    repo?: string;
    status: string;
}

export interface ClusterLibraryPypi {
    messages: string[];
    package: string;
    repo: string;
    status: string;
}

export interface ClusterLibraryWhl {
    messages: string[];
    path?: string;
    status: string;
}

export interface GetDbfsFilePathsPathList {
    fileSize?: number;
    path?: string;
}

export interface GetNotebookPathsNotebookPathList {
    language?: string;
    path?: string;
}

export interface InstancePoolAwsAttributes {
    availability?: string;
    spotBidPricePercent?: number;
    zoneId: string;
}

export interface InstancePoolDiskSpec {
    azureDiskVolumeType?: string;
    diskCount?: number;
    diskSize?: number;
    ebsVolumeType?: string;
}

export interface JobEmailNotifications {
    noAlertForSkippedRuns?: boolean;
    onFailures?: string[];
    onStarts?: string[];
    onSuccesses?: string[];
}

export interface JobLibraryCran {
    package: string;
    repo?: string;
}

export interface JobLibraryMaven {
    coordinates: string;
    exclusions?: string[];
    repo?: string;
}

export interface JobLibraryPypi {
    package: string;
    repo?: string;
}

export interface JobNewCluster {
    autoscale?: outputs.JobNewClusterAutoscale;
    autoterminationMinutes: number;
    awsAttributes?: outputs.JobNewClusterAwsAttributes;
    clusterLogConf?: outputs.JobNewClusterClusterLogConf;
    clusterName: string;
    customTags?: {[key: string]: any};
    dockerImage?: outputs.JobNewClusterDockerImage;
    driverNodeTypeId: string;
    enableElasticDisk: boolean;
    initScripts?: outputs.JobNewClusterInitScript[];
    instancePoolId?: string;
    nodeTypeId?: string;
    numWorkers?: number;
    sparkConf?: {[key: string]: any};
    sparkEnvVars?: {[key: string]: any};
    sparkVersion?: string;
    sshPublicKeys?: string[];
}

export interface JobNewClusterAutoscale {
    maxWorkers?: number;
    minWorkers?: number;
}

export interface JobNewClusterAwsAttributes {
    availability?: string;
    ebsVolumeCount?: number;
    ebsVolumeSize?: number;
    ebsVolumeType?: string;
    firstOnDemand?: number;
    instanceProfileArn?: string;
    spotBidPricePercent?: number;
    zoneId: string;
}

export interface JobNewClusterClusterLogConf {
    dbfs?: outputs.JobNewClusterClusterLogConfDbfs;
    s3?: outputs.JobNewClusterClusterLogConfS3;
}

export interface JobNewClusterClusterLogConfDbfs {
    destination: string;
}

export interface JobNewClusterClusterLogConfS3 {
    cannedAcl?: string;
    destination: string;
    enableEncryption?: boolean;
    encryptionType?: string;
    endpoint?: string;
    kmsKey?: string;
    region?: string;
}

export interface JobNewClusterDockerImage {
    basicAuth?: outputs.JobNewClusterDockerImageBasicAuth;
    url: string;
}

export interface JobNewClusterDockerImageBasicAuth {
    password: string;
    username: string;
}

export interface JobNewClusterInitScript {
    dbfs?: outputs.JobNewClusterInitScriptDbfs;
    s3?: outputs.JobNewClusterInitScriptS3;
}

export interface JobNewClusterInitScriptDbfs {
    destination: string;
}

export interface JobNewClusterInitScriptS3 {
    cannedAcl?: string;
    destination: string;
    enableEncryption?: boolean;
    encryptionType?: string;
    endpoint?: string;
    kmsKey?: string;
    region?: string;
}

export interface JobSchedule {
    quartzCronExpression: string;
    timezoneId: string;
}

export interface MwsNetworksErrorMessage {
    errorMessage: string;
    errorType: string;
}

export interface MwsWorkspacesNetworkErrorMessage {
    errorMessage: string;
    errorType: string;
}
