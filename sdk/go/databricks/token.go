// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Token struct {
	pulumi.CustomResourceState

	Comment         pulumi.StringPtrOutput `pulumi:"comment"`
	CreationTime    pulumi.IntOutput       `pulumi:"creationTime"`
	ExpiryTime      pulumi.IntOutput       `pulumi:"expiryTime"`
	LifetimeSeconds pulumi.IntPtrOutput    `pulumi:"lifetimeSeconds"`
	TokenValue      pulumi.StringOutput    `pulumi:"tokenValue"`
}

// NewToken registers a new resource with the given unique name, arguments, and options.
func NewToken(ctx *pulumi.Context,
	name string, args *TokenArgs, opts ...pulumi.ResourceOption) (*Token, error) {
	if args == nil {
		args = &TokenArgs{}
	}
	var resource Token
	err := ctx.RegisterResource("databricks:index/token:Token", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetToken gets an existing Token resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TokenState, opts ...pulumi.ResourceOption) (*Token, error) {
	var resource Token
	err := ctx.ReadResource("databricks:index/token:Token", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Token resources.
type tokenState struct {
	Comment         *string `pulumi:"comment"`
	CreationTime    *int    `pulumi:"creationTime"`
	ExpiryTime      *int    `pulumi:"expiryTime"`
	LifetimeSeconds *int    `pulumi:"lifetimeSeconds"`
	TokenValue      *string `pulumi:"tokenValue"`
}

type TokenState struct {
	Comment         pulumi.StringPtrInput
	CreationTime    pulumi.IntPtrInput
	ExpiryTime      pulumi.IntPtrInput
	LifetimeSeconds pulumi.IntPtrInput
	TokenValue      pulumi.StringPtrInput
}

func (TokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*tokenState)(nil)).Elem()
}

type tokenArgs struct {
	Comment         *string `pulumi:"comment"`
	CreationTime    *int    `pulumi:"creationTime"`
	ExpiryTime      *int    `pulumi:"expiryTime"`
	LifetimeSeconds *int    `pulumi:"lifetimeSeconds"`
}

// The set of arguments for constructing a Token resource.
type TokenArgs struct {
	Comment         pulumi.StringPtrInput
	CreationTime    pulumi.IntPtrInput
	ExpiryTime      pulumi.IntPtrInput
	LifetimeSeconds pulumi.IntPtrInput
}

func (TokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tokenArgs)(nil)).Elem()
}
