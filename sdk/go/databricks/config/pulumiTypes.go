// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AzureAuth struct {
	AzureRegion          string `pulumi:"azureRegion"`
	ClientId             string `pulumi:"clientId"`
	ClientSecret         string `pulumi:"clientSecret"`
	ManagedResourceGroup string `pulumi:"managedResourceGroup"`
	ResourceGroup        string `pulumi:"resourceGroup"`
	SubscriptionId       string `pulumi:"subscriptionId"`
	TenantId             string `pulumi:"tenantId"`
	WorkspaceName        string `pulumi:"workspaceName"`
}

// AzureAuthInput is an input type that accepts AzureAuthArgs and AzureAuthOutput values.
// You can construct a concrete instance of `AzureAuthInput` via:
//
// 		 AzureAuthArgs{...}
//
type AzureAuthInput interface {
	pulumi.Input

	ToAzureAuthOutput() AzureAuthOutput
	ToAzureAuthOutputWithContext(context.Context) AzureAuthOutput
}

type AzureAuthArgs struct {
	AzureRegion          pulumi.StringInput `pulumi:"azureRegion"`
	ClientId             pulumi.StringInput `pulumi:"clientId"`
	ClientSecret         pulumi.StringInput `pulumi:"clientSecret"`
	ManagedResourceGroup pulumi.StringInput `pulumi:"managedResourceGroup"`
	ResourceGroup        pulumi.StringInput `pulumi:"resourceGroup"`
	SubscriptionId       pulumi.StringInput `pulumi:"subscriptionId"`
	TenantId             pulumi.StringInput `pulumi:"tenantId"`
	WorkspaceName        pulumi.StringInput `pulumi:"workspaceName"`
}

func (AzureAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureAuth)(nil)).Elem()
}

func (i AzureAuthArgs) ToAzureAuthOutput() AzureAuthOutput {
	return i.ToAzureAuthOutputWithContext(context.Background())
}

func (i AzureAuthArgs) ToAzureAuthOutputWithContext(ctx context.Context) AzureAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureAuthOutput)
}

type AzureAuthOutput struct{ *pulumi.OutputState }

func (AzureAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureAuth)(nil)).Elem()
}

func (o AzureAuthOutput) ToAzureAuthOutput() AzureAuthOutput {
	return o
}

func (o AzureAuthOutput) ToAzureAuthOutputWithContext(ctx context.Context) AzureAuthOutput {
	return o
}

func (o AzureAuthOutput) AzureRegion() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAuth) string { return v.AzureRegion }).(pulumi.StringOutput)
}

func (o AzureAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAuth) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o AzureAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAuth) string { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o AzureAuthOutput) ManagedResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAuth) string { return v.ManagedResourceGroup }).(pulumi.StringOutput)
}

func (o AzureAuthOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAuth) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

func (o AzureAuthOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAuth) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o AzureAuthOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAuth) string { return v.TenantId }).(pulumi.StringOutput)
}

func (o AzureAuthOutput) WorkspaceName() pulumi.StringOutput {
	return o.ApplyT(func(v AzureAuth) string { return v.WorkspaceName }).(pulumi.StringOutput)
}

type BasicAuth struct {
	Password string `pulumi:"password"`
	Username string `pulumi:"username"`
}

// BasicAuthInput is an input type that accepts BasicAuthArgs and BasicAuthOutput values.
// You can construct a concrete instance of `BasicAuthInput` via:
//
// 		 BasicAuthArgs{...}
//
type BasicAuthInput interface {
	pulumi.Input

	ToBasicAuthOutput() BasicAuthOutput
	ToBasicAuthOutputWithContext(context.Context) BasicAuthOutput
}

type BasicAuthArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (BasicAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAuth)(nil)).Elem()
}

func (i BasicAuthArgs) ToBasicAuthOutput() BasicAuthOutput {
	return i.ToBasicAuthOutputWithContext(context.Background())
}

func (i BasicAuthArgs) ToBasicAuthOutputWithContext(ctx context.Context) BasicAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BasicAuthOutput)
}

type BasicAuthOutput struct{ *pulumi.OutputState }

func (BasicAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BasicAuth)(nil)).Elem()
}

func (o BasicAuthOutput) ToBasicAuthOutput() BasicAuthOutput {
	return o
}

func (o BasicAuthOutput) ToBasicAuthOutputWithContext(ctx context.Context) BasicAuthOutput {
	return o
}

func (o BasicAuthOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v BasicAuth) string { return v.Password }).(pulumi.StringOutput)
}

func (o BasicAuthOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v BasicAuth) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AzureAuthOutput{})
	pulumi.RegisterOutputType(BasicAuthOutput{})
}
