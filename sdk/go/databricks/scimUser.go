// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ScimUser struct {
	pulumi.CustomResourceState

	DefaultRoles   pulumi.StringArrayOutput `pulumi:"defaultRoles"`
	DisplayName    pulumi.StringPtrOutput   `pulumi:"displayName"`
	Entitlements   pulumi.StringArrayOutput `pulumi:"entitlements"`
	InheritedRoles pulumi.StringArrayOutput `pulumi:"inheritedRoles"`
	Roles          pulumi.StringArrayOutput `pulumi:"roles"`
	SetAdmin       pulumi.BoolPtrOutput     `pulumi:"setAdmin"`
	UserName       pulumi.StringOutput      `pulumi:"userName"`
}

// NewScimUser registers a new resource with the given unique name, arguments, and options.
func NewScimUser(ctx *pulumi.Context,
	name string, args *ScimUserArgs, opts ...pulumi.ResourceOption) (*ScimUser, error) {
	if args == nil || args.DefaultRoles == nil {
		return nil, errors.New("missing required argument 'DefaultRoles'")
	}
	if args == nil || args.UserName == nil {
		return nil, errors.New("missing required argument 'UserName'")
	}
	if args == nil {
		args = &ScimUserArgs{}
	}
	var resource ScimUser
	err := ctx.RegisterResource("databricks:index/scimUser:ScimUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScimUser gets an existing ScimUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScimUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScimUserState, opts ...pulumi.ResourceOption) (*ScimUser, error) {
	var resource ScimUser
	err := ctx.ReadResource("databricks:index/scimUser:ScimUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScimUser resources.
type scimUserState struct {
	DefaultRoles   []string `pulumi:"defaultRoles"`
	DisplayName    *string  `pulumi:"displayName"`
	Entitlements   []string `pulumi:"entitlements"`
	InheritedRoles []string `pulumi:"inheritedRoles"`
	Roles          []string `pulumi:"roles"`
	SetAdmin       *bool    `pulumi:"setAdmin"`
	UserName       *string  `pulumi:"userName"`
}

type ScimUserState struct {
	DefaultRoles   pulumi.StringArrayInput
	DisplayName    pulumi.StringPtrInput
	Entitlements   pulumi.StringArrayInput
	InheritedRoles pulumi.StringArrayInput
	Roles          pulumi.StringArrayInput
	SetAdmin       pulumi.BoolPtrInput
	UserName       pulumi.StringPtrInput
}

func (ScimUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*scimUserState)(nil)).Elem()
}

type scimUserArgs struct {
	DefaultRoles []string `pulumi:"defaultRoles"`
	DisplayName  *string  `pulumi:"displayName"`
	Entitlements []string `pulumi:"entitlements"`
	Roles        []string `pulumi:"roles"`
	SetAdmin     *bool    `pulumi:"setAdmin"`
	UserName     string   `pulumi:"userName"`
}

// The set of arguments for constructing a ScimUser resource.
type ScimUserArgs struct {
	DefaultRoles pulumi.StringArrayInput
	DisplayName  pulumi.StringPtrInput
	Entitlements pulumi.StringArrayInput
	Roles        pulumi.StringArrayInput
	SetAdmin     pulumi.BoolPtrInput
	UserName     pulumi.StringInput
}

func (ScimUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scimUserArgs)(nil)).Elem()
}
