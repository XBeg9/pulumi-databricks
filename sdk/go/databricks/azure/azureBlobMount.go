// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package azure

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AzureBlobMount struct {
	pulumi.CustomResourceState

	AuthType           pulumi.StringOutput `pulumi:"authType"`
	ClusterId          pulumi.StringOutput `pulumi:"clusterId"`
	ContainerName      pulumi.StringOutput `pulumi:"containerName"`
	Directory          pulumi.StringOutput `pulumi:"directory"`
	MountName          pulumi.StringOutput `pulumi:"mountName"`
	StorageAccountName pulumi.StringOutput `pulumi:"storageAccountName"`
	TokenSecretKey     pulumi.StringOutput `pulumi:"tokenSecretKey"`
	TokenSecretScope   pulumi.StringOutput `pulumi:"tokenSecretScope"`
}

// NewAzureBlobMount registers a new resource with the given unique name, arguments, and options.
func NewAzureBlobMount(ctx *pulumi.Context,
	name string, args *AzureBlobMountArgs, opts ...pulumi.ResourceOption) (*AzureBlobMount, error) {
	if args == nil || args.AuthType == nil {
		return nil, errors.New("missing required argument 'AuthType'")
	}
	if args == nil || args.ClusterId == nil {
		return nil, errors.New("missing required argument 'ClusterId'")
	}
	if args == nil || args.ContainerName == nil {
		return nil, errors.New("missing required argument 'ContainerName'")
	}
	if args == nil || args.MountName == nil {
		return nil, errors.New("missing required argument 'MountName'")
	}
	if args == nil || args.StorageAccountName == nil {
		return nil, errors.New("missing required argument 'StorageAccountName'")
	}
	if args == nil || args.TokenSecretKey == nil {
		return nil, errors.New("missing required argument 'TokenSecretKey'")
	}
	if args == nil || args.TokenSecretScope == nil {
		return nil, errors.New("missing required argument 'TokenSecretScope'")
	}
	if args == nil {
		args = &AzureBlobMountArgs{}
	}
	var resource AzureBlobMount
	err := ctx.RegisterResource("databricks:azure/azureBlobMount:AzureBlobMount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureBlobMount gets an existing AzureBlobMount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureBlobMount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureBlobMountState, opts ...pulumi.ResourceOption) (*AzureBlobMount, error) {
	var resource AzureBlobMount
	err := ctx.ReadResource("databricks:azure/azureBlobMount:AzureBlobMount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureBlobMount resources.
type azureBlobMountState struct {
	AuthType           *string `pulumi:"authType"`
	ClusterId          *string `pulumi:"clusterId"`
	ContainerName      *string `pulumi:"containerName"`
	Directory          *string `pulumi:"directory"`
	MountName          *string `pulumi:"mountName"`
	StorageAccountName *string `pulumi:"storageAccountName"`
	TokenSecretKey     *string `pulumi:"tokenSecretKey"`
	TokenSecretScope   *string `pulumi:"tokenSecretScope"`
}

type AzureBlobMountState struct {
	AuthType           pulumi.StringPtrInput
	ClusterId          pulumi.StringPtrInput
	ContainerName      pulumi.StringPtrInput
	Directory          pulumi.StringPtrInput
	MountName          pulumi.StringPtrInput
	StorageAccountName pulumi.StringPtrInput
	TokenSecretKey     pulumi.StringPtrInput
	TokenSecretScope   pulumi.StringPtrInput
}

func (AzureBlobMountState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureBlobMountState)(nil)).Elem()
}

type azureBlobMountArgs struct {
	AuthType           string  `pulumi:"authType"`
	ClusterId          string  `pulumi:"clusterId"`
	ContainerName      string  `pulumi:"containerName"`
	Directory          *string `pulumi:"directory"`
	MountName          string  `pulumi:"mountName"`
	StorageAccountName string  `pulumi:"storageAccountName"`
	TokenSecretKey     string  `pulumi:"tokenSecretKey"`
	TokenSecretScope   string  `pulumi:"tokenSecretScope"`
}

// The set of arguments for constructing a AzureBlobMount resource.
type AzureBlobMountArgs struct {
	AuthType           pulumi.StringInput
	ClusterId          pulumi.StringInput
	ContainerName      pulumi.StringInput
	Directory          pulumi.StringPtrInput
	MountName          pulumi.StringInput
	StorageAccountName pulumi.StringInput
	TokenSecretKey     pulumi.StringInput
	TokenSecretScope   pulumi.StringInput
}

func (AzureBlobMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureBlobMountArgs)(nil)).Elem()
}
