// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DatabricksToken struct {
	pulumi.CustomResourceState

	Comment         pulumi.StringPtrOutput `pulumi:"comment"`
	CreationTime    pulumi.IntOutput       `pulumi:"creationTime"`
	ExpiryTime      pulumi.IntOutput       `pulumi:"expiryTime"`
	LifetimeSeconds pulumi.IntPtrOutput    `pulumi:"lifetimeSeconds"`
	TokenValue      pulumi.StringOutput    `pulumi:"tokenValue"`
}

// NewDatabricksToken registers a new resource with the given unique name, arguments, and options.
func NewDatabricksToken(ctx *pulumi.Context,
	name string, args *DatabricksTokenArgs, opts ...pulumi.ResourceOption) (*DatabricksToken, error) {
	if args == nil {
		args = &DatabricksTokenArgs{}
	}
	var resource DatabricksToken
	err := ctx.RegisterResource("databricks:index/databricksToken:DatabricksToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabricksToken gets an existing DatabricksToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabricksToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabricksTokenState, opts ...pulumi.ResourceOption) (*DatabricksToken, error) {
	var resource DatabricksToken
	err := ctx.ReadResource("databricks:index/databricksToken:DatabricksToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabricksToken resources.
type databricksTokenState struct {
	Comment         *string `pulumi:"comment"`
	CreationTime    *int    `pulumi:"creationTime"`
	ExpiryTime      *int    `pulumi:"expiryTime"`
	LifetimeSeconds *int    `pulumi:"lifetimeSeconds"`
	TokenValue      *string `pulumi:"tokenValue"`
}

type DatabricksTokenState struct {
	Comment         pulumi.StringPtrInput
	CreationTime    pulumi.IntPtrInput
	ExpiryTime      pulumi.IntPtrInput
	LifetimeSeconds pulumi.IntPtrInput
	TokenValue      pulumi.StringPtrInput
}

func (DatabricksTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*databricksTokenState)(nil)).Elem()
}

type databricksTokenArgs struct {
	Comment         *string `pulumi:"comment"`
	CreationTime    *int    `pulumi:"creationTime"`
	ExpiryTime      *int    `pulumi:"expiryTime"`
	LifetimeSeconds *int    `pulumi:"lifetimeSeconds"`
}

// The set of arguments for constructing a DatabricksToken resource.
type DatabricksTokenArgs struct {
	Comment         pulumi.StringPtrInput
	CreationTime    pulumi.IntPtrInput
	ExpiryTime      pulumi.IntPtrInput
	LifetimeSeconds pulumi.IntPtrInput
}

func (DatabricksTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databricksTokenArgs)(nil)).Elem()
}
