// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public partial class InstancePool : Pulumi.CustomResource
    {
        [Output("awsAttributes")]
        public Output<Outputs.InstancePoolAwsAttributes?> AwsAttributes { get; private set; } = null!;

        [Output("customTags")]
        public Output<ImmutableDictionary<string, object>?> CustomTags { get; private set; } = null!;

        [Output("defaultTags")]
        public Output<ImmutableDictionary<string, object>> DefaultTags { get; private set; } = null!;

        [Output("diskSpec")]
        public Output<Outputs.InstancePoolDiskSpec?> DiskSpec { get; private set; } = null!;

        [Output("enableElasticDisk")]
        public Output<bool?> EnableElasticDisk { get; private set; } = null!;

        [Output("idleInstanceAutoterminationMinutes")]
        public Output<int> IdleInstanceAutoterminationMinutes { get; private set; } = null!;

        [Output("instancePoolName")]
        public Output<string> InstancePoolName { get; private set; } = null!;

        [Output("maxCapacity")]
        public Output<int> MaxCapacity { get; private set; } = null!;

        [Output("minIdleInstances")]
        public Output<int> MinIdleInstances { get; private set; } = null!;

        [Output("nodeTypeId")]
        public Output<string> NodeTypeId { get; private set; } = null!;

        [Output("preloadedSparkVersions")]
        public Output<ImmutableArray<string>> PreloadedSparkVersions { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a InstancePool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstancePool(string name, InstancePoolArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/instancePool:InstancePool", name, args ?? new InstancePoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstancePool(string name, Input<string> id, InstancePoolState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/instancePool:InstancePool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstancePool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstancePool Get(string name, Input<string> id, InstancePoolState? state = null, CustomResourceOptions? options = null)
        {
            return new InstancePool(name, id, state, options);
        }
    }

    public sealed class InstancePoolArgs : Pulumi.ResourceArgs
    {
        [Input("awsAttributes")]
        public Input<Inputs.InstancePoolAwsAttributesArgs>? AwsAttributes { get; set; }

        [Input("customTags")]
        private InputMap<object>? _customTags;
        public InputMap<object> CustomTags
        {
            get => _customTags ?? (_customTags = new InputMap<object>());
            set => _customTags = value;
        }

        [Input("diskSpec")]
        public Input<Inputs.InstancePoolDiskSpecArgs>? DiskSpec { get; set; }

        [Input("enableElasticDisk")]
        public Input<bool>? EnableElasticDisk { get; set; }

        [Input("idleInstanceAutoterminationMinutes", required: true)]
        public Input<int> IdleInstanceAutoterminationMinutes { get; set; } = null!;

        [Input("instancePoolName", required: true)]
        public Input<string> InstancePoolName { get; set; } = null!;

        [Input("maxCapacity", required: true)]
        public Input<int> MaxCapacity { get; set; } = null!;

        [Input("minIdleInstances", required: true)]
        public Input<int> MinIdleInstances { get; set; } = null!;

        [Input("nodeTypeId", required: true)]
        public Input<string> NodeTypeId { get; set; } = null!;

        [Input("preloadedSparkVersions")]
        private InputList<string>? _preloadedSparkVersions;
        public InputList<string> PreloadedSparkVersions
        {
            get => _preloadedSparkVersions ?? (_preloadedSparkVersions = new InputList<string>());
            set => _preloadedSparkVersions = value;
        }

        [Input("state")]
        public Input<string>? State { get; set; }

        public InstancePoolArgs()
        {
        }
    }

    public sealed class InstancePoolState : Pulumi.ResourceArgs
    {
        [Input("awsAttributes")]
        public Input<Inputs.InstancePoolAwsAttributesGetArgs>? AwsAttributes { get; set; }

        [Input("customTags")]
        private InputMap<object>? _customTags;
        public InputMap<object> CustomTags
        {
            get => _customTags ?? (_customTags = new InputMap<object>());
            set => _customTags = value;
        }

        [Input("defaultTags")]
        private InputMap<object>? _defaultTags;
        public InputMap<object> DefaultTags
        {
            get => _defaultTags ?? (_defaultTags = new InputMap<object>());
            set => _defaultTags = value;
        }

        [Input("diskSpec")]
        public Input<Inputs.InstancePoolDiskSpecGetArgs>? DiskSpec { get; set; }

        [Input("enableElasticDisk")]
        public Input<bool>? EnableElasticDisk { get; set; }

        [Input("idleInstanceAutoterminationMinutes")]
        public Input<int>? IdleInstanceAutoterminationMinutes { get; set; }

        [Input("instancePoolName")]
        public Input<string>? InstancePoolName { get; set; }

        [Input("maxCapacity")]
        public Input<int>? MaxCapacity { get; set; }

        [Input("minIdleInstances")]
        public Input<int>? MinIdleInstances { get; set; }

        [Input("nodeTypeId")]
        public Input<string>? NodeTypeId { get; set; }

        [Input("preloadedSparkVersions")]
        private InputList<string>? _preloadedSparkVersions;
        public InputList<string> PreloadedSparkVersions
        {
            get => _preloadedSparkVersions ?? (_preloadedSparkVersions = new InputList<string>());
            set => _preloadedSparkVersions = value;
        }

        [Input("state")]
        public Input<string>? State { get; set; }

        public InstancePoolState()
        {
        }
    }
}
