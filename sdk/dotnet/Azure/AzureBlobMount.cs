// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks.Azure
{
    public partial class AzureBlobMount : Pulumi.CustomResource
    {
        [Output("authType")]
        public Output<string> AuthType { get; private set; } = null!;

        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        [Output("containerName")]
        public Output<string> ContainerName { get; private set; } = null!;

        [Output("directory")]
        public Output<string> Directory { get; private set; } = null!;

        [Output("mountName")]
        public Output<string> MountName { get; private set; } = null!;

        [Output("storageAccountName")]
        public Output<string> StorageAccountName { get; private set; } = null!;

        [Output("tokenSecretKey")]
        public Output<string> TokenSecretKey { get; private set; } = null!;

        [Output("tokenSecretScope")]
        public Output<string> TokenSecretScope { get; private set; } = null!;


        /// <summary>
        /// Create a AzureBlobMount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureBlobMount(string name, AzureBlobMountArgs args, CustomResourceOptions? options = null)
            : base("databricks:azure/azureBlobMount:AzureBlobMount", name, args ?? new AzureBlobMountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureBlobMount(string name, Input<string> id, AzureBlobMountState? state = null, CustomResourceOptions? options = null)
            : base("databricks:azure/azureBlobMount:AzureBlobMount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureBlobMount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureBlobMount Get(string name, Input<string> id, AzureBlobMountState? state = null, CustomResourceOptions? options = null)
        {
            return new AzureBlobMount(name, id, state, options);
        }
    }

    public sealed class AzureBlobMountArgs : Pulumi.ResourceArgs
    {
        [Input("authType", required: true)]
        public Input<string> AuthType { get; set; } = null!;

        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("containerName", required: true)]
        public Input<string> ContainerName { get; set; } = null!;

        [Input("directory")]
        public Input<string>? Directory { get; set; }

        [Input("mountName", required: true)]
        public Input<string> MountName { get; set; } = null!;

        [Input("storageAccountName", required: true)]
        public Input<string> StorageAccountName { get; set; } = null!;

        [Input("tokenSecretKey", required: true)]
        public Input<string> TokenSecretKey { get; set; } = null!;

        [Input("tokenSecretScope", required: true)]
        public Input<string> TokenSecretScope { get; set; } = null!;

        public AzureBlobMountArgs()
        {
        }
    }

    public sealed class AzureBlobMountState : Pulumi.ResourceArgs
    {
        [Input("authType")]
        public Input<string>? AuthType { get; set; }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("containerName")]
        public Input<string>? ContainerName { get; set; }

        [Input("directory")]
        public Input<string>? Directory { get; set; }

        [Input("mountName")]
        public Input<string>? MountName { get; set; }

        [Input("storageAccountName")]
        public Input<string>? StorageAccountName { get; set; }

        [Input("tokenSecretKey")]
        public Input<string>? TokenSecretKey { get; set; }

        [Input("tokenSecretScope")]
        public Input<string>? TokenSecretScope { get; set; }

        public AzureBlobMountState()
        {
        }
    }
}
