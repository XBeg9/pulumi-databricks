// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public partial class Cluster : Pulumi.CustomResource
    {
        [Output("autoscale")]
        public Output<Outputs.ClusterAutoscale?> Autoscale { get; private set; } = null!;

        [Output("autoterminationMinutes")]
        public Output<int?> AutoterminationMinutes { get; private set; } = null!;

        [Output("awsAttributes")]
        public Output<Outputs.ClusterAwsAttributes?> AwsAttributes { get; private set; } = null!;

        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        [Output("clusterLogConf")]
        public Output<Outputs.ClusterClusterLogConf?> ClusterLogConf { get; private set; } = null!;

        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        [Output("customTags")]
        public Output<ImmutableDictionary<string, object>?> CustomTags { get; private set; } = null!;

        [Output("defaultTags")]
        public Output<ImmutableDictionary<string, object>> DefaultTags { get; private set; } = null!;

        [Output("dockerImage")]
        public Output<Outputs.ClusterDockerImage?> DockerImage { get; private set; } = null!;

        [Output("driverNodeTypeId")]
        public Output<string> DriverNodeTypeId { get; private set; } = null!;

        [Output("enableElasticDisk")]
        public Output<bool> EnableElasticDisk { get; private set; } = null!;

        [Output("idempotencyToken")]
        public Output<int?> IdempotencyToken { get; private set; } = null!;

        [Output("initScripts")]
        public Output<ImmutableArray<Outputs.ClusterInitScript>> InitScripts { get; private set; } = null!;

        [Output("instancePoolId")]
        public Output<string?> InstancePoolId { get; private set; } = null!;

        [Output("libraryCrans")]
        public Output<ImmutableArray<Outputs.ClusterLibraryCran>> LibraryCrans { get; private set; } = null!;

        [Output("libraryEggs")]
        public Output<ImmutableArray<Outputs.ClusterLibraryEgg>> LibraryEggs { get; private set; } = null!;

        [Output("libraryJars")]
        public Output<ImmutableArray<Outputs.ClusterLibraryJar>> LibraryJars { get; private set; } = null!;

        [Output("libraryMavens")]
        public Output<ImmutableArray<Outputs.ClusterLibraryMaven>> LibraryMavens { get; private set; } = null!;

        [Output("libraryPypis")]
        public Output<ImmutableArray<Outputs.ClusterLibraryPypi>> LibraryPypis { get; private set; } = null!;

        [Output("libraryWhls")]
        public Output<ImmutableArray<Outputs.ClusterLibraryWhl>> LibraryWhls { get; private set; } = null!;

        [Output("nodeTypeId")]
        public Output<string?> NodeTypeId { get; private set; } = null!;

        [Output("numWorkers")]
        public Output<int?> NumWorkers { get; private set; } = null!;

        [Output("singleUserName")]
        public Output<string?> SingleUserName { get; private set; } = null!;

        [Output("sparkConf")]
        public Output<ImmutableDictionary<string, object>?> SparkConf { get; private set; } = null!;

        [Output("sparkEnvVars")]
        public Output<ImmutableDictionary<string, object>?> SparkEnvVars { get; private set; } = null!;

        [Output("sparkVersion")]
        public Output<string> SparkVersion { get; private set; } = null!;

        [Output("sshPublicKeys")]
        public Output<ImmutableArray<string>> SshPublicKeys { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("stateMessage")]
        public Output<string> StateMessage { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : Pulumi.ResourceArgs
    {
        [Input("autoscale")]
        public Input<Inputs.ClusterAutoscaleArgs>? Autoscale { get; set; }

        [Input("autoterminationMinutes")]
        public Input<int>? AutoterminationMinutes { get; set; }

        [Input("awsAttributes")]
        public Input<Inputs.ClusterAwsAttributesArgs>? AwsAttributes { get; set; }

        [Input("clusterLogConf")]
        public Input<Inputs.ClusterClusterLogConfArgs>? ClusterLogConf { get; set; }

        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("customTags")]
        private InputMap<object>? _customTags;
        public InputMap<object> CustomTags
        {
            get => _customTags ?? (_customTags = new InputMap<object>());
            set => _customTags = value;
        }

        [Input("dockerImage")]
        public Input<Inputs.ClusterDockerImageArgs>? DockerImage { get; set; }

        [Input("driverNodeTypeId")]
        public Input<string>? DriverNodeTypeId { get; set; }

        [Input("enableElasticDisk")]
        public Input<bool>? EnableElasticDisk { get; set; }

        [Input("idempotencyToken")]
        public Input<int>? IdempotencyToken { get; set; }

        [Input("initScripts")]
        private InputList<Inputs.ClusterInitScriptArgs>? _initScripts;
        public InputList<Inputs.ClusterInitScriptArgs> InitScripts
        {
            get => _initScripts ?? (_initScripts = new InputList<Inputs.ClusterInitScriptArgs>());
            set => _initScripts = value;
        }

        [Input("instancePoolId")]
        public Input<string>? InstancePoolId { get; set; }

        [Input("libraryCrans")]
        private InputList<Inputs.ClusterLibraryCranArgs>? _libraryCrans;
        public InputList<Inputs.ClusterLibraryCranArgs> LibraryCrans
        {
            get => _libraryCrans ?? (_libraryCrans = new InputList<Inputs.ClusterLibraryCranArgs>());
            set => _libraryCrans = value;
        }

        [Input("libraryEggs")]
        private InputList<Inputs.ClusterLibraryEggArgs>? _libraryEggs;
        public InputList<Inputs.ClusterLibraryEggArgs> LibraryEggs
        {
            get => _libraryEggs ?? (_libraryEggs = new InputList<Inputs.ClusterLibraryEggArgs>());
            set => _libraryEggs = value;
        }

        [Input("libraryJars")]
        private InputList<Inputs.ClusterLibraryJarArgs>? _libraryJars;
        public InputList<Inputs.ClusterLibraryJarArgs> LibraryJars
        {
            get => _libraryJars ?? (_libraryJars = new InputList<Inputs.ClusterLibraryJarArgs>());
            set => _libraryJars = value;
        }

        [Input("libraryMavens")]
        private InputList<Inputs.ClusterLibraryMavenArgs>? _libraryMavens;
        public InputList<Inputs.ClusterLibraryMavenArgs> LibraryMavens
        {
            get => _libraryMavens ?? (_libraryMavens = new InputList<Inputs.ClusterLibraryMavenArgs>());
            set => _libraryMavens = value;
        }

        [Input("libraryPypis")]
        private InputList<Inputs.ClusterLibraryPypiArgs>? _libraryPypis;
        public InputList<Inputs.ClusterLibraryPypiArgs> LibraryPypis
        {
            get => _libraryPypis ?? (_libraryPypis = new InputList<Inputs.ClusterLibraryPypiArgs>());
            set => _libraryPypis = value;
        }

        [Input("libraryWhls")]
        private InputList<Inputs.ClusterLibraryWhlArgs>? _libraryWhls;
        public InputList<Inputs.ClusterLibraryWhlArgs> LibraryWhls
        {
            get => _libraryWhls ?? (_libraryWhls = new InputList<Inputs.ClusterLibraryWhlArgs>());
            set => _libraryWhls = value;
        }

        [Input("nodeTypeId")]
        public Input<string>? NodeTypeId { get; set; }

        [Input("numWorkers")]
        public Input<int>? NumWorkers { get; set; }

        [Input("singleUserName")]
        public Input<string>? SingleUserName { get; set; }

        [Input("sparkConf")]
        private InputMap<object>? _sparkConf;
        public InputMap<object> SparkConf
        {
            get => _sparkConf ?? (_sparkConf = new InputMap<object>());
            set => _sparkConf = value;
        }

        [Input("sparkEnvVars")]
        private InputMap<object>? _sparkEnvVars;
        public InputMap<object> SparkEnvVars
        {
            get => _sparkEnvVars ?? (_sparkEnvVars = new InputMap<object>());
            set => _sparkEnvVars = value;
        }

        [Input("sparkVersion", required: true)]
        public Input<string> SparkVersion { get; set; } = null!;

        [Input("sshPublicKeys")]
        private InputList<string>? _sshPublicKeys;
        public InputList<string> SshPublicKeys
        {
            get => _sshPublicKeys ?? (_sshPublicKeys = new InputList<string>());
            set => _sshPublicKeys = value;
        }

        public ClusterArgs()
        {
        }
    }

    public sealed class ClusterState : Pulumi.ResourceArgs
    {
        [Input("autoscale")]
        public Input<Inputs.ClusterAutoscaleGetArgs>? Autoscale { get; set; }

        [Input("autoterminationMinutes")]
        public Input<int>? AutoterminationMinutes { get; set; }

        [Input("awsAttributes")]
        public Input<Inputs.ClusterAwsAttributesGetArgs>? AwsAttributes { get; set; }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("clusterLogConf")]
        public Input<Inputs.ClusterClusterLogConfGetArgs>? ClusterLogConf { get; set; }

        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("customTags")]
        private InputMap<object>? _customTags;
        public InputMap<object> CustomTags
        {
            get => _customTags ?? (_customTags = new InputMap<object>());
            set => _customTags = value;
        }

        [Input("defaultTags")]
        private InputMap<object>? _defaultTags;
        public InputMap<object> DefaultTags
        {
            get => _defaultTags ?? (_defaultTags = new InputMap<object>());
            set => _defaultTags = value;
        }

        [Input("dockerImage")]
        public Input<Inputs.ClusterDockerImageGetArgs>? DockerImage { get; set; }

        [Input("driverNodeTypeId")]
        public Input<string>? DriverNodeTypeId { get; set; }

        [Input("enableElasticDisk")]
        public Input<bool>? EnableElasticDisk { get; set; }

        [Input("idempotencyToken")]
        public Input<int>? IdempotencyToken { get; set; }

        [Input("initScripts")]
        private InputList<Inputs.ClusterInitScriptGetArgs>? _initScripts;
        public InputList<Inputs.ClusterInitScriptGetArgs> InitScripts
        {
            get => _initScripts ?? (_initScripts = new InputList<Inputs.ClusterInitScriptGetArgs>());
            set => _initScripts = value;
        }

        [Input("instancePoolId")]
        public Input<string>? InstancePoolId { get; set; }

        [Input("libraryCrans")]
        private InputList<Inputs.ClusterLibraryCranGetArgs>? _libraryCrans;
        public InputList<Inputs.ClusterLibraryCranGetArgs> LibraryCrans
        {
            get => _libraryCrans ?? (_libraryCrans = new InputList<Inputs.ClusterLibraryCranGetArgs>());
            set => _libraryCrans = value;
        }

        [Input("libraryEggs")]
        private InputList<Inputs.ClusterLibraryEggGetArgs>? _libraryEggs;
        public InputList<Inputs.ClusterLibraryEggGetArgs> LibraryEggs
        {
            get => _libraryEggs ?? (_libraryEggs = new InputList<Inputs.ClusterLibraryEggGetArgs>());
            set => _libraryEggs = value;
        }

        [Input("libraryJars")]
        private InputList<Inputs.ClusterLibraryJarGetArgs>? _libraryJars;
        public InputList<Inputs.ClusterLibraryJarGetArgs> LibraryJars
        {
            get => _libraryJars ?? (_libraryJars = new InputList<Inputs.ClusterLibraryJarGetArgs>());
            set => _libraryJars = value;
        }

        [Input("libraryMavens")]
        private InputList<Inputs.ClusterLibraryMavenGetArgs>? _libraryMavens;
        public InputList<Inputs.ClusterLibraryMavenGetArgs> LibraryMavens
        {
            get => _libraryMavens ?? (_libraryMavens = new InputList<Inputs.ClusterLibraryMavenGetArgs>());
            set => _libraryMavens = value;
        }

        [Input("libraryPypis")]
        private InputList<Inputs.ClusterLibraryPypiGetArgs>? _libraryPypis;
        public InputList<Inputs.ClusterLibraryPypiGetArgs> LibraryPypis
        {
            get => _libraryPypis ?? (_libraryPypis = new InputList<Inputs.ClusterLibraryPypiGetArgs>());
            set => _libraryPypis = value;
        }

        [Input("libraryWhls")]
        private InputList<Inputs.ClusterLibraryWhlGetArgs>? _libraryWhls;
        public InputList<Inputs.ClusterLibraryWhlGetArgs> LibraryWhls
        {
            get => _libraryWhls ?? (_libraryWhls = new InputList<Inputs.ClusterLibraryWhlGetArgs>());
            set => _libraryWhls = value;
        }

        [Input("nodeTypeId")]
        public Input<string>? NodeTypeId { get; set; }

        [Input("numWorkers")]
        public Input<int>? NumWorkers { get; set; }

        [Input("singleUserName")]
        public Input<string>? SingleUserName { get; set; }

        [Input("sparkConf")]
        private InputMap<object>? _sparkConf;
        public InputMap<object> SparkConf
        {
            get => _sparkConf ?? (_sparkConf = new InputMap<object>());
            set => _sparkConf = value;
        }

        [Input("sparkEnvVars")]
        private InputMap<object>? _sparkEnvVars;
        public InputMap<object> SparkEnvVars
        {
            get => _sparkEnvVars ?? (_sparkEnvVars = new InputMap<object>());
            set => _sparkEnvVars = value;
        }

        [Input("sparkVersion")]
        public Input<string>? SparkVersion { get; set; }

        [Input("sshPublicKeys")]
        private InputList<string>? _sshPublicKeys;
        public InputList<string> SshPublicKeys
        {
            get => _sshPublicKeys ?? (_sshPublicKeys = new InputList<string>());
            set => _sshPublicKeys = value;
        }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("stateMessage")]
        public Input<string>? StateMessage { get; set; }

        public ClusterState()
        {
        }
    }
}
